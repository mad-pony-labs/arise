{
    "swagger": "2.0",
    "info": {
        "description": "Arise API",
        "version": "1.0.0",
        "title": "Arise API",
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "basePath": "/api",
    "schemes": [
        "https",
        "http"
    ],
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "Token": {
            "description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "paths": {
        "/users/register": {
            "post": {
                "summary": "Register a new user",
                "description": "Register a new user",
                "tags": [
                    "User and Authentication"
                ],
                "operationId": "Register",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "description": "Credentials to use",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "maxLength": 255
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email"
                                },
                                "password": {
                                    "type": "string",
                                    "minLength": 8
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "422": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/GenericErrorModel"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "summary": "Get the current user",
                "description": "Get the current user",
                "tags": [
                    "User and Authentication"
                ],
                "operationId": "GetMe",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/GenericErrorModel"
                        }
                    }
                }
            }
        },
        "/institutions/create": {
            "post": {
                "summary": "Create a new institution",
                "description": "Create a new institution",
                "tags": [
                    "Institution"
                ],
                "operationId": "CreateInstitution",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "description": "Institution to create",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "maxLength": 255
                                },
                                "logo": {
                                    "type": "string",
                                    "format": "url"
                                }
                            },
                            "required": [
                                "name"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InstitutionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/GenericErrorModel"
                        }
                    }
                }
            }
        },
        "/institutions": {
            "get": {
                "summary": "Get all institutions",
                "description": "Get all institutions",
                "tags": [
                    "Institution"
                ],
                "operationId": "GetInstitutions",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "success"
                                    ]
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "institutions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/Institution"
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/GenericErrorModel"
                        }
                    }
                }
            }
        },
        "/institutions/{id}": {
            "get": {
                "summary": "Get an institution",
                "description": "Get an institution",
                "tags": [
                    "Institution"
                ],
                "operationId": "GetInstitution",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Institution ID",
                        "type": "string",
                        "format": "slug"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InstitutionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/GenericErrorModel"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update an institution",
                "description": "Update an institution",
                "tags": [
                    "Institution"
                ],
                "operationId": "UpdateInstitution",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Institution ID",
                        "type": "string",
                        "format": "slug"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "description": "Institution to update",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "maxLength": 255
                                },
                                "logo": {
                                    "type": "string",
                                    "format": "url"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InstitutionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/GenericErrorModel"
                        }
                    }
                }
            }
        },
        "/institutions/{id}/join/": {
            "post": {
                "summary": "Join an institution",
                "description": "Join an institution",
                "tags": [
                    "Institution"
                ],
                "operationId": "JoinInstitution",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Institution ID",
                        "type": "string",
                        "format": "slug"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InstitutionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/GenericErrorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Institution": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "slug",
                    "example": "jh"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Johns Hopkins University"
                },
                "logo": {
                    "type": "string",
                    "format": "url",
                    "example": "https://www.example.com"
                }
            }
        },
        "InstitutionResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "success"
                    ]
                },
                "data": {
                    "$ref": "#/definitions/Institution"
                }
            },
            "required": [
                "status",
                "data"
            ]
        },
        "UserResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "success"
                    ]
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "name": {
                            "type": "string",
                            "maxLength": 255
                        },
                        "email": {
                            "type": "string",
                            "format": "email"
                        }
                    }
                }
            },
            "required": [
                "status",
                "data"
            ]
        },
        "GenericErrorModel": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "error"
                    ]
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}